from math import sin, cos, tan, log, e

f = input("Input your function: ")
a = float(input("What is a of the interval [a,b]: " ))
b = float(input("What is b of the interval [a,b]: " ))
i = a
l=[]
c=[]
max = 0
min = 0
u=[]
d=[]
ll=[a]
lmax=[]
lmin=[]
llmin=[]
'''
while i <= b+0.5: 
    # f prime (slope)
    x = i
    y1=(eval(f))
    x=i+.01
    y2=eval(f) 
    fprime= (y2-y1)/(0.01)
    x=i+.02
    y3=(eval(f))
    fprimea= (y3-y2)/(0.01)
    x = i-0.1
    y4=(eval(f))
    x=i-.02
    y5=eval(f) 
    fprimeb= (y5-y4)/(0.01)
    x = i
    #extrema
    if i == a:
        l.append(format(round(x,4)))
        if fprimea<0:
            print("maximum= {0}".format(round(x, 4)))
            maxx = x
            max = y1
            lmax.append(i)
        elif fprimea>0:
            print("minimum= {0}".format(round(x, 4)))
            minx = x
            min = y1
            lmin.append(i)
    elif fprime <= 0.1 and fprime >= -0.1: 
        if fprimea< 0 and fprimeb> 0:
            l.append(format(round(x,4)))
            print("maximum= {0}".format(round(x, 4)))
            lmax.append(i)
            #increasing
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("increasing [" + str(to) + ", " + str(length) + "]")
            if y1 > max:
                maxx = x
                max = y1
        elif fprimea> 0 and fprimeb< 0:
            l.append(format(round(x,4)))
            print("minimum= {0}".format(round(x, 4)))
            lmin.append(i)
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("decreasing [" + str(to) + ", " + str(length) + "]")
            if y1 < min:
                minx = x
                min = y1
    elif i >= b-.01 and i<= b+.01:
        l.append(format(round(x,4)))
        if fprimeb>0:
            print("maximum= {0}".format(round(x, 4)))
            lmax.append(i)
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("increasing [" + str(to) + ", " + str(length) + "]")
            if y1 > max:
                maxx = x
                max = y1
        elif fprimeb<0:
            print("minimum= {0}".format(round(x, 4)))
            lmin.append(i)
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("decreasing [" + str(to) + ", " +str(length) + "]")
            if y1 < min:
                minx = x
                min = y1
    i +=.1
'''
#Critical Points(fprime=0)
i=a

while i<=b+0.01: 
    x=i
    fx=eval(f)
    x=i+.01
    fxa=eval(f)
    x=i-.01
    fxb=eval(f) 
    x=i-.02
    fxbb=eval(f)
    fprimea= (fxa-fx)/.01
    fprime= (fx-fxb)/.01
    fprimeb=(fxb-fxbb)/0.01
    if i>=b-.01 and i<=b+.01: 
        if fprimeb>0: 
            endpt = ("Maximum: {0}".format(round(x, 5)))
            lmin.append(b)
        elif fprimeb<0: 
            endpt = ("Maximum: {0}".format(round(x, 5)))
            lmax.append(b)
    elif fprime>0 and fprimea<0: 
        print("Maximum: {0}".format(round(x, 5)))
        lmax.append(x)
    elif fprime<0 and fprimea>0: 
        print("Minimum: {0}".format(round(x, 5)))
        lmin.append(x)
    i +=.01
print(endpt)
ll.append(b)

#Absolute Max/Min
multabs=[]
print(lmin)
am = lmin[0]
for y in lmin: 
    pos=lmin.index(y)
    if len(lmin)==0:
        print("Absolute minimum: ", y)
    if round(y,3) != b: 
        x=y
        fx=eval(f) 
        print(fx)
        x=lmin[pos+1]
        fx2=eval(f)
        print(fx2)
        if fx<fx2:
            am=fx
        elif fx2>fx: 
            am=fx2
        elif fx<(fx2+.01) and fx>(fx2-.01): 
            multabs.append(fx)
            multabs.append(fx2)
            print("hi")
        elif fx2<(fx+.01) and fx2>(fx-.01): 
            multabs.append(fx)
            multabs.append(fx2)
            print("hello")
        else:
            print('sorry')
print("Absolute minimum = {0}".format(round(am, 4)))
print("lmax", lmax)
print("multabs", multabs)
for h in multabs: 
    print("Absolute minimum = {0}".format(round(h, 4)))

    
#Points of Inflection
i=a
while i<=b: 
    x=i
    fx=eval(f)
    x=i+.01
    fxa=eval(f)
    x=i+.02
    fxaa=eval(f)
    x=i-.01
    fxb=eval(f) 
    x=i-.02
    fxbb=eval(f)
    fprimea= (fxa-fx)/.01
    fprime= (fx-fxb)/.01
    fprimeb=(fxb-fxbb)/0.01
    x=i
    dprime= (fprimea-fprime)/0.01
    ddprime = (fprime-fprimeb)/0.01
    
    if dprime>=0 and ddprime<=0: 
        print("point of inflection= {0}".format(round(x, 4)))
        ll.append(i)
    if dprime<=0 and ddprime>=0: 
        print("point of inflection= {0}".format(round(x, 4)))
        ll.append(i)
    i +=.01
ll.append(b) 
r=list(range(0,len(ll)))

#concavity
for p in r:
    n=ll[p]
    x=float(n)
    fx=eval(f)
    x=n+.01
    fxa=eval(f) 
    x=n-.01
    fxb=eval(f) 
    fprimea= (fxa-fx)/.01
    fprime= (fx-fxb)/.01
    x=n
    dprime= (fprimea-fprime)/0.01
    if dprime>0 and p<(len(ll)-1): 
        print("Concave up:") 
        u= ll.index(n)
        print("(" + str(round(n,4)) + ", " + str(round(ll[p+1],4)) + ")")
    elif dprime<0 and p<(len(ll)-1): 
        print("Concave down:") 
        u= ll.index(n)
        print("(" + str(round(n,4)) + ", " + str(round(ll[p+1],4)) + ")")



